#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã TTS_rus_engine
"""

from russian_tts import RussianTTS
import os

def test_final_system():
    """–§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –≤—Å–µ–π —Å–∏—Å—Ç–µ–º—ã"""
    
    print("üéØ –§–ò–ù–ê–õ–¨–ù–´–ô –¢–ï–°–¢ TTS_rus_engine")
    print("=" * 60)
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    print("1. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è TTS...")
    tts = RussianTTS()
    print("   ‚úÖ TTS –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
    
    # –¢–µ—Å—Ç –ø—Ä–µ–¥–æ–±—Ä–∞–±–æ—Ç–∫–∏
    print("\n2. –¢–µ—Å—Ç –ø—Ä–µ–¥–æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–µ–∫—Å—Ç–∞:")
    test_texts = [
        "–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞?",
        "GPT —Ä–∞–±–æ—Ç–∞–µ—Ç —Ö–æ—Ä–æ—à–æ",
        "–í 2024 –≥–æ–¥—É",
        "—Ç—ë–ª–∫–∞ —Ç–µ–ª–∫–∞"
    ]
    
    for text in test_texts:
        processed = tts.preprocess_text_for_tts(text)
        print(f"   '{text}' -> '{processed}'")
    
    # –¢–µ—Å—Ç —Å–∏–Ω—Ç–µ–∑–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å —Ä–µ—Ñ–µ—Ä–µ–Ω—Å–Ω–æ–µ –∞—É–¥–∏–æ)
    ref_audio = "test_audio/test_ref.wav"
    if os.path.exists(ref_audio):
        print(f"\n3. –¢–µ—Å—Ç —Å–∏–Ω—Ç–µ–∑–∞ —Ä–µ—á–∏:")
        print(f"   –†–µ—Ñ–µ—Ä–µ–Ω—Å–Ω–æ–µ –∞—É–¥–∏–æ: {ref_audio}")
        
        try:
            audio_path = tts.synthesize_speech(
                text="–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã.",
                ref_audio_path=ref_audio,
                ref_text="–°–µ–∫—Ä–µ—Ç—ã –≤—Å–µ–≥–¥–∞ —Ä—è–¥–æ–º, –°–∫—É—Ñ. –ù—É–∂–Ω–æ –ª–∏—à—å —Ç–∏—Ö–æ –ø—Ä–∏—Å–ª—É—à–∞—Ç—å—Å—è –∏ —É—Å–ª—ã—à–∞—Ç—å –∏—Ö."
            )
            print(f"   ‚úÖ –ê—É–¥–∏–æ —Å–æ–∑–¥–∞–Ω–æ: {audio_path}")
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ç–µ–∑–∞: {e}")
    else:
        print(f"\n3. –†–µ—Ñ–µ—Ä–µ–Ω—Å–Ω–æ–µ –∞—É–¥–∏–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ: {ref_audio}")
        print("   –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç —Å–∏–Ω—Ç–µ–∑–∞")
    
    print("\n" + "=" * 60)
    print("üéâ –§–ò–ù–ê–õ–¨–ù–´–ô –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù!")
    print("–°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")

if __name__ == "__main__":
    test_final_system()
