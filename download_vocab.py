#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫–∞—á–∏–≤–∞–Ω–∏–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ vocab.txt –¥–ª—è F5-TTS Russian
"""

import logging
from pathlib import Path
from huggingface_hub import hf_hub_download

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

def download_vocab():
    """–°–∫–∞—á–∏–≤–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π vocab.txt –¥–ª—è F5-TTS Russian"""
    try:
        logger.info("–°–∫–∞—á–∏–≤–∞–µ–º vocab.txt –∏–∑ Misha24-10/F5-TTS_RUSSIAN...")
        
        # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –º–æ–¥–µ–ª–∏
        model_dir = Path("models/russian/F5TTS_v1_Base_v2")
        model_dir.mkdir(parents=True, exist_ok=True)
        
        # –°–∫–∞—á–∏–≤–∞–µ–º vocab.txt
        vocab_path = hf_hub_download(
            repo_id="Misha24-10/F5-TTS_RUSSIAN",
            filename="F5TTS_v1_Base/vocab.txt",
            cache_dir="f5_tts_cache"
        )
        
        # –ö–æ–ø–∏—Ä—É–µ–º –≤ –Ω—É–∂–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
        import shutil
        target_path = model_dir / "vocab.txt"
        shutil.copy(vocab_path, target_path)
        
        logger.info(f"‚úÖ vocab.txt —Å–∫–∞—á–∞–Ω –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤: {target_path}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
        file_size = target_path.stat().st_size
        logger.info(f"üìä –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {file_size} –±–∞–π—Ç")
        
        # –ß–∏—Ç–∞–µ–º –ø–µ—Ä–≤—ã–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å—Ç—Ä–æ–∫ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
        with open(target_path, 'r', encoding='utf-8') as f:
            lines = f.readlines()[:10]
            logger.info("üìù –ü–µ—Ä–≤—ã–µ 10 —Å—Ç—Ä–æ–∫ vocab.txt:")
            for i, line in enumerate(lines, 1):
                logger.info(f"  {i}: {line.strip()}")
        
        return str(target_path)
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ vocab.txt: {e}")
        return None

if __name__ == "__main__":
    result = download_vocab()
    if result:
        print(f"‚úÖ vocab.txt —É—Å–ø–µ—à–Ω–æ —Å–∫–∞—á–∞–Ω: {result}")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ vocab.txt")
